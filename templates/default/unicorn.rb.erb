app_folder = "<%= @working_path %>"
worker_processes <%= @workers %>
working_directory app_folder

preload_app true

timeout <%= @timeout %>

listen "<%= @socket_path %>", :backlog => 1024

pid "<%= @pid_path %>"

stderr_path "<%= @shared_path%>/log/unicorn.log"
stdout_path "<%= @shared_path%>/log/unicorn.log"

if GC.respond_to?(:copy_on_write_friendly=)
  GC.copy_on_write_friendly = true
end

before_fork do |server, worker|
  defined?(ActiveRecord::Base) && ActiveRecord::Base.connection.disconnect!

  old_pid = "<%= @pid_path %>.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
      puts "Old master alerady dead"
    end
  end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) && ActiveRecord::Base.establish_connection
  child_pid = server.config[:pid].sub('.pid', ".#{worker.nr}.pid")
  system("echo #{Process.pid} > #{child_pid}")
end

before_exec do |server|
  ENV['BUNDLE_GEMFILE'] = "#{app_folder}/Gemfile"
end